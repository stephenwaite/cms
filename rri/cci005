      * @package cms
      * @link    http://www.cmsvt.com
      * @author  s waite <cmswest@sover.net>
      * @copyright Copyright (c) 2020 cms <cmswest@sover.net>
      * @license https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3
       IDENTIFICATION DIVISION.
       PROGRAM-ID. cci005.
       AUTHOR. s WAITE.
       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT CHARFILE ASSIGN TO "S30" ORGANIZATION IS INDEXED
           ACCESS MODE IS DYNAMIC RECORD KEY IS CHARFILE-KEY
           LOCK MODE MANUAL.
           SELECT CCIFILE ASSIGN TO "S35" ORGANIZATION IS INDEXED
           ACCESS IS DYNAMIC RECORD KEY IS CCI-KEY
           LOCK MODE MANUAL.
           SELECT FILEOUT ASSIGN TO "S40" ORGANIZATION
           LINE SEQUENTIAL.

       DATA DIVISION.
       FILE SECTION.
       FD  CCIFILE.
       01  CCIFILE01.
           02 CCI-KEY.
             03 CCI-KEY1 PIC X(5).
             03 CCI-KEY2 PIC X(5).
           02 CCI-IND PIC X.
       FD FILEOUT.
       01 FILEOUT01 PIC X(30).
       FD  CHARFILE
      *    BLOCK CONTAINS 2 RECORDS
           DATA RECORD IS CHARFILE01.
       01  CHARFILE01.
           02 CHARFILE-KEY.
             03 CD-KEY8 PIC X(8).
             03 CD-KEY3 PIC XXX.
           02 CD-PATID PIC X(8).
           02 CD-CLAIM PIC X(6).
           02 CD-SERVICE PIC X.
           02 CD-DIAG PIC X(7).
           02 CD-PROC. 
               03 CD-PROC0 PIC X(4).
               03 CD-PROC1 PIC X(5).
               03 CD-PROC3 PIC XX.
           02 CD-MOD2 PIC XX.
           02 CD-MOD3 PIC XX.
           02 CD-MOD4 PIC XX.
           02 CD-AMOUNT PIC S9(4)V99.
           02 CD-DOCR PIC X(3).
           02 CD-DOCP PIC X(2).
           02 CD-PAYCODE PIC XXX.
           02 CD-STAT PIC X.
           02 CD-WORK PIC XX.
           02 CD-DAT1 PIC X(8).
           02 CD-RESULT PIC X.
           02 CD-ACT PIC X.
           02 CD-SORCREF PIC X.
           02 CD-COLLT PIC X.
           02 CD-AUTH PIC X.
           02 CD-PAPER PIC X.
           02 CD-PLACE PIC X.
           02 CD-NAME PIC X(24).
           02 CD-ESPDT PIC X.
           02 CD-DATE-T PIC X(8).
           02 CD-DATE-E PIC X(8).
           02 CD-ORDER PIC X(6).
           02 CD-DX2 PIC X(7).
           02 CD-DX3 PIC X(7).
           02 CD-DATE-A PIC X(8).
           02 CD-ACC-TYPE PIC X.
           02 CD-DATE-M PIC X(8).
           02 CD-ASSIGN PIC X.
           02 CD-NEIC-ASSIGN PIC X.
           02 CD-DX4 PIC X(7).
           02 CD-DX5 PIC X(7).
           02 CD-DX6 PIC X(7).
           02 CD-FUTURE PIC X(6).
       WORKING-STORAGE SECTION.
       01  CHARBACK PIC X(8).
       01  DATE-TAB01.
            02 DATE-TAB PIC 9(8) OCCURS 90 TIMES.
            02 KEY-TAB PIC X(11) OCCURS 90 TIMES.
            02 PROC-TAB PIC X(5) OCCURS 90 TIMES.
            02 DOC-TAB PIC   XX  OCCURS 90 TIMES.
            02 MOD2-TAB PIC  XX  OCCURS 90 TIMES.
            02 MOD3-TAB PIC  XX  OCCURS 90 TIMES.

       01  X PIC 99.
       01  Y PIC 99.
       01  Z PIC 99.
       01  T PIC 99.
       01  A PIC 99.
       01  B PIC 99.
       01  c pic 99.
       01  FLAG PIC 9.
       01  FLAGX PIC 9 VALUE 0.
       01  IND-X PIC X.
       01  HOLDIT PIC X(8).
       01  alf1 pic x.
       01  alf2 pic XX.
       01  alf5 pic x(5).
       01  alf8 pic x(8).
       01  alf11 pic x(11).
      *
       PROCEDURE DIVISION.
       P0.
           OPEN I-O CHARFILE 
           OPEN INPUT CCIFILE
           OPEN OUTPUT FILEOUT
           MOVE SPACE TO CHARFILE-KEY CHARBACK.
       P0-1.
           START CHARFILE KEY NOT < CHARFILE-KEY INVALID
               GO TO P4
           END-START.    
       P1.
           READ CHARFILE NEXT AT END
               GO TO P4
           END-READ

           IF CD-AMOUNT = 0
               GO TO P1
           END-IF

           IF CD-WORK NOT = "01"
               GO TO P1
           END-IF
    
       P1-1.
           MOVE CD-KEY8 TO HOLDIT
           MOVE 1 TO X
           MOVE CHARFILE-KEY TO KEY-TAB(X)
           MOVE CD-PROC1 TO PROC-TAB(X)
           MOVE CD-DOCR TO DOC-TAB(X)
           MOVE CD-MOD2 TO MOD2-TAB(X)
           MOVE CD-MOD3 TO MOD3-TAB(X)
           MOVE CD-DATE-T TO DATE-TAB(X).
       P2.
           READ CHARFILE NEXT AT END
               GO TO P4
           END-READ

           IF CD-KEY8 NOT = HOLDIT
               GO TO P14
           END-IF

           IF CD-AMOUNT = 0
               GO TO P2
           END-IF

           ADD 1 TO X
           MOVE CHARFILE-KEY TO KEY-TAB(X)
           MOVE CD-PROC1 TO PROC-TAB(X)
           MOVE CD-DOCR TO DOC-TAB(X)
           MOVE CD-DOCR TO DOC-TAB(X)
           MOVE CD-MOD2 TO MOD2-TAB(X)
           MOVE CD-MOD3 TO MOD3-TAB(X)
           MOVE CD-DATE-T TO DATE-TAB(X)
           GO TO P2.
       P14.
           IF X < 2 GO TO P1-1.
           MOVE CD-KEY8 TO CHARBACK
           COMPUTE Y = X - 1
           PERFORM P15 THRU P17 VARYING Z FROM 1 BY 1 UNTIL Z > Y.
           PERFORM P18 THRU P20 VARYING Z FROM 1 BY 1 UNTIL Z > Y.
           MOVE SPACE TO CHARFILE-KEY
           MOVE CHARBACK TO CHARFILE-KEY
           GO TO P0-1.
       P15.
           COMPUTE B = Z + 1
           PERFORM P16 THRU P16-EXIT VARYING A FROM B BY 1 UNTIL A > X
           GO TO P17.
       P16.
           IF (DATE-TAB(A) = DATE-TAB(Z))
            AND (PROC-TAB(A) = PROC-TAB(Z)) 
            AND (DOC-TAB(A) = DOC-TAB(Z)
            AND MOD2-TAB(A) = MOD2-TAB(Z))
            MOVE KEY-TAB(A) TO CHARFILE-KEY
            READ CHARFILE WITH LOCK
             INVALID CONTINUE
             NOT INVALID
              IF CD-MOD2 = "76" OR CD-MOD3 = "76"
               GO TO P16-EXIT
              END-IF
              IF CD-MOD2 = SPACE
               MOVE "76" TO CD-MOD2
              END-IF
              IF (CD-MOD2 NOT = SPACE)
               AND (CD-MOD2 NOT = "76")
               MOVE "76" TO CD-MOD3
              END-IF
             REWRITE CHARFILE01
           END-IF.
       P16-EXIT.
           EXIT.
       P17.
           EXIT.
       P18.
           COMPUTE B = Z + 1
           PERFORM P19 THRU P19-EXIT VARYING A FROM B BY 1 UNTIL A > X
           GO TO P20.
       P19.
           IF NOT ((DATE-TAB(A) = DATE-TAB(Z))
            AND (DOC-TAB(A) = DOC-TAB(Z))
            AND (PROC-TAB(A) NOT  = PROC-TAB(Z)))
            GO TO P19-EXIT
           END-IF
            MOVE 0 TO FLAG
            PERFORM CCI-1 THRU CCI-3
            IF FLAG = 0
              GO TO P19-EXIT
            END-IF
            IF IND-X = "0"
             MOVE SPACE TO FILEOUT01
             MOVE KEY-TAB(A) TO FILEOUT01
             WRITE FILEOUT01
             DISPLAY FILEOUT01
             MOVE KEY-TAB(Z) TO FILEOUT01
             WRITE FILEOUT01
             DISPLAY FILEOUT01
             DISPLAY "CAN NOT BILL THESE TWO TOGETHER."
             DISPLAY "CHECK FOR BAD DATA FROM RRMC."
             DISPLAY " "
             DISPLAY "RESULTS IN THE ERRORFILE TO BE DISPLAYED LATER."
             DISPLAY " "
             DISPLAY " "
             DISPLAY " "
             DISPLAY "HIT THE RETURN KEY!!!!"
             ACCEPT OMITTED
             GO TO P19-EXIT
            END-IF.
       P19-1.
            IF FLAG = 2
               MOVE KEY-TAB(Z) TO CHARFILE-KEY
              ELSE
               MOVE KEY-TAB(A) TO CHARFILE-KEY
            END-IF
             READ CHARFILE WITH LOCK
              INVALID CONTINUE
              NOT INVALID
              DISPLAY CCI-KEY
              DISPLAY CD-NAME
              DISPLAY CD-DATE-T
              ACCEPT OMITTED
              IF CD-MOD2 = SPACE
               MOVE "59" TO CD-MOD2
              END-IF
              IF (CD-MOD2 NOT = SPACE)
               AND (CD-MOD2 NOT = "59")
               MOVE "59" TO CD-MOD3
              END-IF
              REWRITE CHARFILE01
             END-READ
             IF FLAG = 2
               MOVE A TO X
             END-IF.
       P19-EXIT.
           EXIT.
       P20.
           EXIT.
       CCI-1.
           MOVE PROC-TAB(Z) TO CCI-KEY1
           MOVE PROC-TAB(A) TO CCI-KEY2
           READ CCIFILE INVALID
             GO TO CCI-2
           END-READ
           MOVE CCI-IND TO IND-X
           MOVE 1 TO FLAG
           GO TO  CCI-3.
       CCI-2.
           MOVE PROC-TAB(A) TO CCI-KEY1
           MOVE PROC-TAB(Z) TO CCI-KEY2
           READ CCIFILE INVALID
             GO TO CCI-3
           END-READ
           MOVE CCI-IND TO IND-X
           MOVE 2 TO FLAG.
       CCI-3.
           EXIT.
       P4.
           IF X > 1
               COMPUTE Y = X - 1
               PERFORM P15 THRU P17 VARYING Z FROM 1 BY 1 UNTIL Z > Y
               PERFORM P18 THRU P20 VARYING Z FROM 1 BY 1 UNTIL Z > Y
           END-IF
           CLOSE CHARFILE FILEOUT. 
           STOP RUN.
